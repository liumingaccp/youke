<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="youke.common.dao.ISubscrFansDao" >
  <resultMap id="BaseResultMap" type="youke.common.model.TSubscrFans" >
    <id column="openId" property="openid" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="truename" property="truename" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="headimgurl" property="headimgurl" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="language" property="language" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="experience" property="experience" jdbcType="INTEGER" />
    <result column="unionid" property="unionid" jdbcType="VARCHAR" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="regIp" property="regip" jdbcType="VARCHAR" />
    <result column="regTime" property="regtime" jdbcType="TIMESTAMP" />
    <result column="lastTime" property="lasttime" jdbcType="TIMESTAMP" />
    <result column="subTime" property="subtime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="subState" property="substate" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="groupid" property="groupid" jdbcType="INTEGER" />
    <result column="comeFrom" property="comefrom" jdbcType="INTEGER" />
    <result column="appId" property="appid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    openId, nickname, truename, mobile, email, sex, headimgurl, city, province, country,
    language, integral, experience, unionid, login_count, regIp, regTime, lastTime, subTime,
    state, subState, remark, groupid, comeFrom, appId
  </sql>
  <update id="updateIntegralByOpenId">
    UPDATE t_subscr_fans SET integral = integral + #{integral} WHERE openId=#{openId} AND appId=#{appId}
  </update>
  <select id="selectSubScrByOpenId" resultType="youke.common.model.TSubscrFans">
    select
    <include refid="Base_Column_List" />
    from t_subscr_fans
    where openId = #{openid} AND state = 0 AND subState = 0
  </select>
  <select id="selectMobilesByAppId" resultType="java.lang.String">
    SELECT mobile FROM t_subscr_fans WHERE  appId = #{appId} AND state = 0 AND  subState = 0 AND mobile IS NOT NULL
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_subscr_fans
    where openId = #{openid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_subscr_fans
    where openId = #{openid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="youke.common.model.TSubscrFans">
    insert into t_subscr_fans (openId, nickname, truename,
    mobile, email, sex,
    headimgurl, city, province,
    country, language, integral,
    experience, unionid, login_count,
    regIp, regTime, lastTime,
    subTime, state, subState,
    remark, groupid, comeFrom,
    appId)
    values (#{openid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{truename,jdbcType=VARCHAR},
    #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER},
    #{headimgurl,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR},
    #{country,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{integral,jdbcType=INTEGER},
    #{experience,jdbcType=INTEGER}, #{unionid,jdbcType=VARCHAR}, #{loginCount,jdbcType=INTEGER},
    #{regip,jdbcType=VARCHAR}, #{regtime,jdbcType=TIMESTAMP}, #{lasttime,jdbcType=TIMESTAMP},
    #{subtime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{substate,jdbcType=INTEGER},
    #{remark,jdbcType=VARCHAR}, #{groupid,jdbcType=INTEGER}, #{comefrom,jdbcType=INTEGER},
    #{appid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="youke.common.model.TSubscrFans">
    insert into t_subscr_fans
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="openid != null" >
        openId,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="truename != null" >
        truename,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="headimgurl != null" >
        headimgurl,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="language != null" >
        language,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="experience != null" >
        experience,
      </if>
      <if test="unionid != null" >
        unionid,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="regip != null" >
        regIp,
      </if>
      <if test="regtime != null" >
        regTime,
      </if>
      <if test="lasttime != null" >
        lastTime,
      </if>
      <if test="subtime != null" >
        subTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="substate != null" >
        subState,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="groupid != null" >
        groupid,
      </if>
      <if test="comefrom != null" >
        comeFrom,
      </if>
      <if test="appid != null" >
        appId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="headimgurl != null" >
        #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="language != null" >
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=INTEGER},
      </if>
      <if test="unionid != null" >
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="regip != null" >
        #{regip,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null" >
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null" >
        #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="subtime != null" >
        #{subtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="substate != null" >
        #{substate,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="comefrom != null" >
        #{comefrom,jdbcType=INTEGER},
      </if>
      <if test="appid != null" >
        #{appid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="youke.common.model.TSubscrFans" >
    update t_subscr_fans
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="truename != null" >
        truename = #{truename,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="headimgurl != null" >
        headimgurl = #{headimgurl,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="language != null" >
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=INTEGER},
      </if>
      <if test="unionid != null" >
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="regip != null" >
        regIp = #{regip,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null" >
        regTime = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="lasttime != null" >
        lastTime = #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="subtime != null" >
        subTime = #{subtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="substate != null" >
        subState = #{substate,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="groupid != null" >
        groupid = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="comefrom != null" >
        comeFrom = #{comefrom,jdbcType=INTEGER},
      </if>
      <if test="appid != null" >
        appId = #{appid,jdbcType=VARCHAR},
      </if>
    </set>
    where openId = #{openid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="youke.common.model.TSubscrFans" >
    update t_subscr_fans
    set nickname = #{nickname,jdbcType=VARCHAR},
      truename = #{truename,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      headimgurl = #{headimgurl,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      experience = #{experience,jdbcType=INTEGER},
      unionid = #{unionid,jdbcType=VARCHAR},
      login_count = #{loginCount,jdbcType=INTEGER},
      regIp = #{regip,jdbcType=VARCHAR},
      regTime = #{regtime,jdbcType=TIMESTAMP},
      lastTime = #{lasttime,jdbcType=TIMESTAMP},
      subTime = #{subtime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      subState = #{substate,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      groupid = #{groupid,jdbcType=INTEGER},
      comeFrom = #{comefrom,jdbcType=INTEGER},
      appId = #{appid,jdbcType=VARCHAR}
    where openId = #{openid,jdbcType=VARCHAR}
  </update>

  <select id="isOpenId" resultType="java.lang.String">
    SELECT openId
    FROM t_subscr_fans
    WHERE openId = #{openid}
  </select>

  <select id="queryIdList" parameterType="youke.common.model.vo.param.WxFansQueryVo" resultType ="java.lang.String">
    SELECT
    sfans.openId
    FROM
    t_subscr_fans_tag sfans
    JOIN t_subscr_fans fans ON fans.openId = sfans.openId
    JOIN t_tag tag ON sfans.tagId = tag.id
    WHERE
    fans.appId = #{appId}
    AND
    sfans.tagId IN
      <foreach collection="tags" item="tagId" open="(" close=")" separator=",">
          #{tagId}
      </foreach>
    GROUP BY sfans.openId
    <if test="tagFilter == 1">
      HAVING count(sfans.openId) &gt;= #{tagCount}
    </if>
  </select>

  <select id="queryIdList2" parameterType="youke.common.model.vo.param.WxFansQueryVo" resultType ="java.lang.String">
    SELECT
    fans.openId
    FROM
    t_subscr_fans fans
    JOIN t_subscr_fans_tag sfans ON fans.openId = sfans.openId
    JOIN t_tag tag ON sfans.tagId = tag.id
    WHERE
    fans.appId = #{appId}
    AND
    sfans.tagId IN
    <foreach collection="tags" item="tagId" open="(" close=")" separator=",">
      #{tagId}
    </foreach>
    GROUP BY sfans.openId
  </select>

  <select id="queryList" parameterType="youke.common.model.vo.param.WxFansQueryVo" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_subscr_fans
    <where>
      AND appId = #{appId}
      AND
      state = 0
      AND subState = 0
      <if test="openIdCount > 0">
        AND openId IN
        <foreach collection="openIds" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="lastTimeBeg != null and lastTimeEnd != null">
        AND lastTime &gt;= #{lastTimeBeg}
        AND lastTime &lt;= #{lastTimeEnd}
      </if>
      <if test="nickname != null">
        AND nickname like concat('%', #{nickname}, '%')
      </if>
      <if test="hasMobile == 0">
        AND mobile IS NULL
      </if>
      <if test="hasMobile == 1">
        AND mobile IS NOT NULL
      </if>
      <if test="province != null">
        AND province = #{province}
      </if>
      <if test="city != null">
        AND city = #{city}
      </if>
      <if test="sex > -1">
        AND sex = #{sex}
      </if>
    </where>
  </select>

  <select id="selectTTagByOpenId" resultMap="youke.common.dao.ITagDao.BaseResultMap">
      SELECT tag.id, tag.title FROM t_subscr_fans fans
            JOIN t_subscr_fans_tag sfans on fans.openId = sfans.openId
            JOIN t_tag tag ON sfans.tagId = tag.id
        WHERE fans.openId = #{openId}
  </select>

  <update id="saveRemark">
    UPDATE t_subscr_fans
    SET remark =#{remark}
    WHERE openId = #{openId}
  </update>

  <select id="queryBlackList"  resultMap="BaseResultMap" parameterType="String">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_subscr_fans
    <where>
      state = 1
      <if test="nickName != null">
        AND nickname like CONCAT(concat('%', #{nickName}, '%'))
      </if>
      AND appId =#{appId}
    </where>
  </select>

  <update id="batchUpdateState">
    UPDATE t_subscr_fans
    SET state = #{state}
    WHERE appid = #{appid} AND subState = 0 AND openId IN
        <foreach collection="openIds" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
  </update>

  <select id="selectOpenIdsByTagId" resultType="java.lang.String">
    SELECT fans.openId
    FROM t_subscr_fans fans, t_subscr_fans_tag ftag
    WHERE fans.openId = ftag.openId
			AND ftag.tagId = #{tagId}
			AND fans.subState = 0
  </select>
  <select id="getAddFansNumForSevenDays" resultType="java.lang.Integer">
    SELECT IFNULL(COUNT(openId),0) FROM t_subscr_fans WHERE DATEDIFF(regTime,NOW())&lt;=0 AND DATEDIFF(regTime,NOW())>-7 AND appId=#{appId}
  </select>
  <select id="getAddFansNumForYesterday" resultType="java.lang.Integer">
    SELECT IFNULL(COUNT(openId),0) FROM t_subscr_fans WHERE date(DATE_FORMAT(regTime,'%Y-%m-%d %h:%i:%s')) = date_sub(curdate(),interval 1 day) AND appId=#{appId}
  </select>
  <select id="getAddFansNumForTheDayBeforeYesterday" resultType="java.lang.Integer">
    SELECT IFNULL(COUNT(openId),0) FROM t_subscr_fans WHERE DATEDIFF(regTime,NOW())=-2 AND appId=#{appId}
  </select>
  <select id="getActiveFansNumForYesterday" resultType="java.lang.Integer">
    SELECT IFNULL(COUNT(openId),0) FROM t_subscr_fans WHERE date(DATE_FORMAT(lastTime,'%Y-%m-%d %h:%i:%s')) = date_sub(curdate(),interval 1 day) AND appId=#{appId}
  </select>
  <select id="getActiveFansNumForTheDayBeforeYesterday" resultType="java.lang.Integer">
    SELECT IFNULL(COUNT(openId),0) FROM t_subscr_fans WHERE DATEDIFF(lastTime,NOW())=-2 AND appId=#{appId}
  </select>
  <select id="getAddFansNumForElevenDays" resultType="java.lang.Integer">
    SELECT IFNULL(COUNT(openId),0) FROM t_subscr_fans WHERE DATEDIFF(regTime,NOW())&lt;=0 AND DATEDIFF(regTime,NOW())>-14 AND appId=#{appId}
  </select>
    <select id="queryForCount" resultType="java.lang.Integer">
      select count(openId) from t_subscr_fans where appId = #{appId}
    </select>
    <select id="selectByMobile" resultType="java.lang.Integer">
      select count(openId) from t_subscr_fans where appId = #{appId} and mobile = #{mobile}
    </select>
</mapper>