<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="youke.common.dao.IYoukeBankDao" >
  <resultMap id="BaseResultMap" type="youke.common.model.TYoukeBank" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="classify" property="classify" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="leftPrice" property="leftprice" jdbcType="INTEGER" />
    <result column="payType" property="paytype" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="youkeId" property="youkeid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, classify, title, price, leftPrice, payType, createTime, youkeId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_youke_bank
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_youke_bank
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="youke.common.model.TYoukeBank"  useGeneratedKeys="true" keyProperty="id">
    insert into t_youke_bank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="leftprice != null" >
        leftPrice,
      </if>
      <if test="paytype != null" >
        payType,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="youkeid != null" >
        youkeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="leftprice != null" >
        #{leftprice,jdbcType=INTEGER},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="youkeid != null" >
        #{youkeid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="youke.common.model.TYoukeBank" >
    update t_youke_bank
    <set >
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="leftprice != null" >
        leftPrice = #{leftprice,jdbcType=INTEGER},
      </if>
      <if test="paytype != null" >
        payType = #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="youkeid != null" >
        youkeId = #{youkeid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="youke.common.model.TYoukeBank" >
    update t_youke_bank
    set classify = #{classify,jdbcType=VARCHAR},
    title = #{title,jdbcType=VARCHAR},
    price = #{price,jdbcType=INTEGER},
    leftPrice = #{leftprice,jdbcType=INTEGER},
    payType = #{paytype,jdbcType=VARCHAR},
    createTime = #{createtime,jdbcType=TIMESTAMP},
    youkeId = #{youkeid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectBankList" resultType="youke.common.model.TYoukeBank">
    select id, classify, price, leftPrice, payType, createTime, youkeId
    from t_youke_bank
    <where>
      <if test="begTime != null">
        AND createTime >= #{begTime}
      </if>
      <if test="endTime != null">
        AND createTime &lt;= #{endTime}
      </if>
      AND youkeId=#{dykId}
    </where>
    ORDER BY createTime DESC
  </select>
</mapper>